{
  "sections": [
    {
      "class": "general",
      "title": "Загальне",
      "items": [
        {
          "title": "Що відбувається коли ти тиснеш на гіперпосилання",
          "body": "Коли ви натискаєте на гіперпосилання, браузер виконує подію click і, якщо є, виконує пов’язаний JavaScript. Потім браузер перевіряє атрибути посилання, такі як target, і перенаправляє на URL, вказаний в атрибуті href. Браузер надсилає HTTP-запит до сервера, отримує відповідь, зазвичай у вигляді HTML, завантажує необхідні ресурси і рендерить нову сторінку. Нарешті, оновлюється історія браузера, щоб ви могли повернутися на попередню сторінку."
        }
      ]
    },
    {
      "class": "verstka",
      "title": "Верстка",
      "items": [
        {
          "title": "Що таке семантична верстка",
          "body": "Це верстка яка покращує доступність та зрозумілість контенту як розробнику так і для користувачів так і для пошукових роботів."
        },
        {
          "title": "які симантичні теги",
          "body": "header, footer, main, section, nav, article, aside."
        },
        {
          "title": "у чому різниця між html i htmx",
          "body": "у закриваючому тегу у html незакриваючі теги можуть бути."
        },
        {
          "title": "З чого складається HTML сторінка",
          "body": "\"DOCTYPE html\", html: Кореневий елемент, що містить весь контент HTML-документа. Атрибут lang вказує мову документа.,'head:', 'body'."
        },
        {
          "title": "що таке doctype",
          "body": "Doctype (<!doctype html>) — це декларація типу документа, яка вказує браузеру, що веб-сторінка використовує стандарт HTML5, щоб забезпечити правильне відображення контенту."
        },
        {
          "title": "Що таке елементи, теги та атрибути в HTML?",
          "body": "В HTML існують три основні концепції: елементи, теги та атрибути."
        },
        {
          "title": "Чим відрізняється div від span?",
          "body": "div блоковий а span стрічковий елемент."
        },
        {
          "title": "Що таке атрибут data-* в HTML і як він використовується?",
          "body": "Атрибут data-* в HTML є спеціальним типом атрибутів, який дозволяє веб-розробникам зберігати додаткову інформацію або дані без створення додаткових невидимих елементів у DOM (Document Object Model). Цей атрибут був введений в HTML5 і є частиною специфікації для зберігання користувацьких даних, які можуть використовуватися JavaScript для реалізації різноманітних функцій і операцій."
        }
      ]
    },
    {
      "class": "cascadian",
      "title": "CSS",
      "items": [
        {
          "title": "Що таке CSS і для чого він використовується?",
          "body": "CSS (Cascading Style Sheets) є мовою стилів, яка використовується для опису вигляду і форматування веб-сторінок, написаних у мові розмітки гіпертексту HTML (або інших мовах, таких як XML)."
        },
        {
          "title": "що таке селектор",
          "body": "Селектор в CSS використовується для визначення елементів HTML, до яких будуть застосовані стилі. Селектори допомагають вибирати елементи на основі їх тегів, класів, ідентифікаторів, атрибутів, станів."
        },
        {
          "title": "Як використовуються змінні у CSS?",
          "body": "Змінні в CSS, також відомі як CSS-перемінні або користувацькі властивості, дозволяють зберігати значення, які можна повторно використовувати в різних частинах стилів. Це робить CSS більш динамічним і полегшує підтримку та оновлення стилів. Змінні визначаються за допомогою синтаксису --variable-name і доступні через функцію var(--variable-name)."
        },
        {
          "title": "Як зробити HTML-елемент невидимим за допомогою CSS?",
          "body": "display: none; - Цей спосіб приховує елемент із потоку документа, тобто він зовсім не відображається на сторінці. Примітною особливістю є те, що він займає нульове місце в лейауті, інші елементи можуть рухатись на його місце. <br /> visibility: hidden - Цей спосіб також приховує елемент, але зберігає його місце в лейауті, тобто простір, який він займає, залишається. Елемент прихований відображається як прозорий, тому його контент невидимий, але він залишається в розрахунку розмітки."
        },
        {
          "title": "чим відрізняється flex box і grid",
          "body": "Flexbox - Одновимірний макет: Flexbox призначений для роботи в одному вимірі — або в рядку, або в стовпці; <br /> Grid - Двовимірний макет: CSS Grid призначений для роботи в двох вимірах — як по горизонталі, так і по вертикалі."
        },
        {
          "title": "що таке 1fr",
          "body": "1fr — це одиниця вимірювання в CSS Grid Layout, яка представляє собою 'одну частку' доступного простору в контейнері сітки."
        },
        {
          "title": "Які є способи підключення CSS до HTML-документа?",
          "body": "Вкладений (Inline) CSS - Цей метод використовує атрибут style безпосередньо всередині HTML тегів. <br /> Внутрішній (Internal) CSS Цей метод використовує тег 'style', розміщений всередині head HTML-документа. Внутрішній CSS застосовується до всього документа або до його частини. <br /> Зовнішній (External) CSS У цьому методі CSS код зберігається у окремому файлі з розширенням .css, і цей файл підключається до HTML-документа за допомогою тегу link> в head>."
        },
        {
          "title": "Як можна додати анімацію в CSS?",
          "body": "анімацію можна додати через @animation, keyframes, transition."
        },
        {
          "title": "Що таке 'box model' в CSS?",
          "body": "Контент (Content), Відступи (Padding):, Рамка (Border):, Зовнішній відступ (Margin):"
        },
        {
          "title": "Як працює властивість z-index і коли вона використовується?",
          "body": "Властивість z-index в CSS використовується для керування порядком накладання елементів один на одного в тривимірному просторі браузера. Вона визначає 'глибину' (з-індекс) елемента в стеку накладання і дозволяє контролювати, який елемент буде показаний поверх іншого, коли вони перекриваються."
        },
        {
          "title": "як змінити елементи місцями за допомогою grid",
          "body": "Щоб змінити місцями елементи за допомогою CSS Grid, ви можете використовувати властивості grid-row і grid-column."
        },
        {
          "title": "які ти знаєш позиціонування",
          "body": "position: static <br /> position: relative <br /> position: absolute <br /> position: fixed <br /> position: sticky"
        }
      ]
    }
  ]
}
